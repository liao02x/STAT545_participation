# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
str(tags)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header")
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1("Level 1 header, 2")
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1("Level 1 header, 2"),
HTML("<h1>Level 1 header, 3")
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3")
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3"),
tags$div(`data-value` = "test")
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3"),
tags$div(`data-value` = "test"),
tags$a(href="www.rstudio.com", "Click here!"),
tags$b("This text is bold."),
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3"),
tags$div(`data-value` = "test"),
tags$a(href="www.rstudio.com", "Click here!"),
tags$b("This text is bold."),
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3"),
tags$a(href="www.rstudio.com", "Click here!"),
tags$b("This text is bold."),
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3"),
a(href="www.rstudio.com", "Click here!"),
b("This text is bold."),
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
a(href="www.rstudio.com", "Click here!"),
b("This text is bold."),
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
a(href="www.rstudio.com", "Click here!"),
b("This text is bold."),
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
a(href="www.rstudio.com", "Click here!"),
b("This text is bold."),
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
a(href="www.rstudio.com", "Click here!"),
b("This text is bold."),
)
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
a(href="www.rstudio.com", "Click here!"),
tags$b("This text is bold."),
)
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
a(href="www.rstudio.com", "Click here!"),
tags$b("This text is bold."),
)
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
tags$a(href="www.rstudio.com", "Click here!"),
tags$b("This text is bold."),
)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
tags$a(href="www.rstudio.com", "Click here!"),
tags$b("This text is bold.")
)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
tags$a(href="www.rstudio.com", "Click here!"),
tags$b("This text is bold.")
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
tags$a(href="www.rstudio.com", "Click here!"),
tags$br(),
tags$b("This text is bold.")
)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
tags$a(href="www.rstudio.com", "Click here!"),
tags$br(),
tags$b("This text is bold.")
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
a <- 5
# Define UI for application that draws a histogram
ui <- fluidPage(
"This is some text.",
"THis is another one.",
tags$h1("Level 1 header"),
h1(em("Level 1 header, 2")),
HTML("<h1>Level 1 header, 3</h1>"),
tags$a(href="www.rstudio.com", "Click here!"),
tags$br(),
tags$b("This text is bold."),
a
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
getwd()
setwd("C:\\Users\\Minzhi\\OneDrive\\STAT545\\STAT545_participation\\cm107\\bcl")
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
str(bcl)
library(shiny)
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("BC Liquor price app",
windowTitle = "BCL app"),
sidebarLayout(
sidebarPanel("This text is in the sidebar."),
mainPanel("This text is in the main panel.")
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("BC Liquor price app",
windowTitle = "BCL app"),
sidebarLayout(
sidebarPanel("This text is in the sidebar."),
mainPanel("This text is in the main panel.")
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
ui
}
library(shiny)
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("BC Liquor price app",
windowTitle = "BCL app"),
sidebarLayout(
sidebarPanel("This text is in the sidebar."),
mainPanel(
plotOutput("price_hist")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("BC Liquor price app",
windowTitle = "BCL app"),
sidebarLayout(
sidebarPanel("This text is in the sidebar."),
mainPanel(
plotOutput("price_hist")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$price_hist <- ggplot2::qplot(bcl$Price)
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("BC Liquor price app",
windowTitle = "BCL app"),
sidebarLayout(
sidebarPanel("This text is in the sidebar."),
mainPanel(
plotOutput("price_hist")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$price_hist <- renderPlot(ggplot2::qplot(bcl$Price))
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("BC Liquor price app",
windowTitle = "BCL app"),
sidebarLayout(
sidebarPanel("This text is in the sidebar."),
mainPanel(
plotOutput("price_hist")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$price_hist <- renderImage(ggplot2::qplot(bcl$Price))
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("BC Liquor price app",
windowTitle = "BCL app"),
sidebarLayout(
sidebarPanel("This text is in the sidebar."),
mainPanel(
plotOutput("price_hist"),
tableOutput("price_data")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$price_hist <- renderPlot(ggplot2::qplot(bcl$Price))
output$price_data <- renderTable(bcl$Price)
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("BC Liquor price app",
windowTitle = "BCL app"),
sidebarLayout(
sidebarPanel("This text is in the sidebar."),
mainPanel(
plotOutput("price_hist"),
tableOutput("price_data")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$price_hist <- renderPlot(ggplot2::qplot(bcl$Price))
output$price_data <- renderTable(bcl)
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("BC Liquor price app",
windowTitle = "BCL app"),
sidebarLayout(
sidebarPanel("This text is in the sidebar."),
mainPanel(
plotOutput("price_hist"),
tableOutput("bcl_data")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
price_plot <- ggplot2::ggplot(bcl, ggplot2::aes(x = Price)) +
ggplot2::geom_bar()
output$price_hist <- renderPlot(price_plot)
output$bcl_data <- renderTable(bcl)
}
# Run the application
shinyApp(ui = ui, server = server)
ggplot2::ggplot(bcl, ggplot2::aes(x = Price)) +
ggplot2::geom_bar()
ggplot2::ggplot(bcl) +
ggplot2::geom_bar(ggplot2::aes(x = Price))
ggplot2::ggplot(bcl, ggplot2::aes(x = Price)) +
ggplot2::geom_bar(Price)
library(shiny)
bcl <- read.csv("bcl-data.csv", stringsAsFactors = FALSE)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("BC Liquor price app",
windowTitle = "BCL app"),
sidebarLayout(
sidebarPanel("This text is in the sidebar."),
mainPanel(
plotOutput("price_hist"),
tableOutput("price_data")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
price_plot <- ggplot2::qplot(bcl$Price)
output$price_hist <- renderPlot(price_plot)
output$price_data <- renderTable(bcl)
}
# Run the application
shinyApp(ui = ui, server = server)
